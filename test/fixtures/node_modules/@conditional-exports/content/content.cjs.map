{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import type { Context, CSSRules, ThemeSection, Directive, MaybeThunk } from 'twind'\nimport { directive } from 'twind'\n\ndeclare module 'twind' {\n  interface Theme {\n    content?: ThemeSection<string>\n  }\n}\n\nexport interface Content {\n  (value: string): Directive<CSSRules>\n  (parts: string[], context: Context): CSSRules\n}\n\nconst KNOWN_VALUES = new Set([\n  'open-quote',\n  'close-quote',\n  'no-open-quote',\n  'no-close-quote',\n  'normal',\n  'none',\n  'inherit',\n  'initial',\n  'unset',\n])\n\nconst join = (parts: string[]): string => parts.join('-')\n\nconst stringify = (parts: string[]): string => {\n  switch (parts[0]) {\n    case 'data':\n      return `attr(${join(parts)})`\n    case 'attr':\n    case 'counter':\n      return `${parts[0]}(${join(parts.slice(1))})`\n    case 'var':\n      return `var(--${join(parts)})`\n    case undefined:\n      return `attr(data-content)`\n    default:\n      return JSON.stringify(join(parts))\n  }\n}\n\nconst content$ = (parts: string | string[], { theme }: Context): CSSRules => {\n  const value = Array.isArray(parts) ? join(parts) : parts\n\n  return {\n    content:\n      (value && theme('content', [value], '')) ||\n      (KNOWN_VALUES.has(value) && value) ||\n      (Array.isArray(parts) ? stringify(parts) : value),\n  }\n}\n\nexport const content = ((\n  value: string | string[],\n  context: Context,\n): CSSRules | Directive<CSSRules> =>\n  Array.isArray(value) ? content$(value, context) : directive(content$, value)) as Content\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,mBAA0B;AAa1B,IAAM,eAAe,IAAI,IAAI;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGF,IAAM,OAAO,CAAC,UAA4B,MAAM,KAAK;AAErD,IAAM,YAAY,CAAC;AACjB,UAAQ,MAAM;AAAA,SACP;AACH,aAAO,QAAQ,KAAK;AAAA,SACjB;AAAA,SACA;AACH,aAAO,GAAG,MAAM,MAAM,KAAK,MAAM,MAAM;AAAA,SACpC;AACH,aAAO,SAAS,KAAK;AAAA,SAClB;AACH,aAAO;AAAA;AAEP,aAAO,KAAK,UAAU,KAAK;AAAA;AAAA;AAIjC,IAAM,WAAW,CAAC,OAA0B,CAAE;AAC5C,QAAM,QAAQ,MAAM,QAAQ,SAAS,KAAK,SAAS;AAEnD,SAAO;AAAA,IACL,SACG,SAAS,MAAM,WAAW,CAAC,QAAQ,OACnC,aAAa,IAAI,UAAU,SAC3B,OAAM,QAAQ,SAAS,UAAU,SAAS;AAAA;AAAA;AAI1C,IAAM,UAAW,CACtB,OACA,YAEA,MAAM,QAAQ,SAAS,SAAS,OAAO,WAAW,uBAAU,UAAU;",
  "names": []
}
