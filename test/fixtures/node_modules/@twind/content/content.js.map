{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import type { Context, CSSRules, ThemeSection, Directive, MaybeThunk } from 'twind'\nimport { directive } from 'twind'\n\ndeclare module 'twind' {\n  interface Theme {\n    content?: ThemeSection<string>\n  }\n}\n\nexport interface Content {\n  (value: string): Directive<CSSRules>\n  (parts: string[], context: Context): CSSRules\n}\n\nconst KNOWN_VALUES = new Set([\n  'open-quote',\n  'close-quote',\n  'no-open-quote',\n  'no-close-quote',\n  'normal',\n  'none',\n  'inherit',\n  'initial',\n  'unset',\n])\n\nconst join = (parts: string[]): string => parts.join('-')\n\nconst stringify = (parts: string[]): string => {\n  switch (parts[0]) {\n    case 'data':\n      return `attr(${join(parts)})`\n    case 'attr':\n    case 'counter':\n      return `${parts[0]}(${join(parts.slice(1))})`\n    case 'var':\n      return `var(--${join(parts)})`\n    case undefined:\n      return `attr(data-content)`\n    default:\n      return JSON.stringify(join(parts))\n  }\n}\n\nconst content$ = (parts: string | string[], { theme }: Context): CSSRules => {\n  const value = Array.isArray(parts) ? join(parts) : parts\n\n  return {\n    content:\n      (value && theme('content', [value], '')) ||\n      (KNOWN_VALUES.has(value) && value) ||\n      (Array.isArray(parts) ? stringify(parts) : value),\n  }\n}\n\nexport const content = ((\n  value: string | string[],\n  context: Context,\n): CSSRules | Directive<CSSRules> =>\n  Array.isArray(value) ? content$(value, context) : directive(content$, value)) as Content\n"],
  "mappings": "AACA,kCAaA,GAAM,GAAe,GAAI,KAAI,CAC3B,aACA,cACA,gBACA,iBACA,SACA,OACA,UACA,UACA,UAGI,EAAO,AAAC,GAA4B,EAAM,KAAK,KAE/C,EAAY,AAAC,IACjB,OAAQ,EAAM,QACP,OACH,MAAO,QAAQ,EAAK,UACjB,WACA,UACH,MAAO,GAAG,EAAM,MAAM,EAAK,EAAM,MAAM,WACpC,MACH,MAAO,SAAS,EAAK,UAClB,QACH,MAAO,6BAEP,MAAO,MAAK,UAAU,EAAK,MAI3B,EAAW,CAAC,EAA0B,CAAE,YAC5C,GAAM,GAAQ,MAAM,QAAQ,GAAS,EAAK,GAAS,EAEnD,MAAO,CACL,QACG,GAAS,EAAM,UAAW,CAAC,GAAQ,KACnC,EAAa,IAAI,IAAU,GAC3B,OAAM,QAAQ,GAAS,EAAU,GAAS,KAIpC,EAAW,CACtB,EACA,IAEA,MAAM,QAAQ,GAAS,EAAS,EAAO,GAAW,EAAU,EAAU",
  "names": []
}
